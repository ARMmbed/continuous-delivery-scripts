name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  python_cache_macOS_path: |
    ~/Library/Caches/pip
  python_cache_windows_path: |
    ~\AppData\Local\pip\Cache
  python_cache_ubuntu_path: |
    ~/.cache/pip
jobs:
  build-and-test:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]
        python-version: ["3.8", "3.9", "3.10"]
        go-module: [utils]
        multi-platform:
          - ${{ github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch' }}
        exclude:
          - os: macOS-latest
            multi-platform: false
          - os: windows-latest
            multi-platform: false
    name: Build and test
    runs-on: ${{ matrix.os }}      
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Determine dependencies [OS:${{ matrix.os }}, Python:${{ matrix.python-version }}]
      # Note
      # The below code generates a pip requirements file from the pipenv development requirements (also obtaining the
      # normal dependencies from setup.py).
      # This code also forces the system to install latest tools as the ones present on the CI system may be too old
      # for the process to go through properly.
      run: |
        python -m pip install --upgrade pip wheel setuptools
        python -m pip install flake8 pipenv pytest
        python -m pipenv lock --dev -r --pre > dev-requirements.txt
        
    - if: ${{ startsWith(matrix.os, 'macOS') }}
      run: echo "CACHE_PATH=${{ env.python_cache_macOS_path }}" >> $GITHUB_ENV
    - if: ${{ startsWith(matrix.os, 'windows') }}
      run: echo "CACHE_PATH=${{ env.python_cache_windows_path }}" >> $GITHUB_ENV
    - if: ${{ startsWith(matrix.os, 'ubuntu') }}
      run: echo "CACHE_PATH=${{ env.python_cache_ubuntu_path }}" >> $GITHUB_ENV
    - name: Load Python Dependencies from cache
      uses: actions/cache@v2
      with:
        path: |
          ${{ env.CACHE_PATH }}
          ~/go/pkg/mod
        key:  ${{ matrix.os  }}-pip-${{ matrix.python-version }}-${{ hashFiles('**/dev-requirements.txt') }}
        restore-keys: |
          ${{ matrix.os  }}-pip-${{ matrix.python-version }}    
    - name: Install dependencies
      # Note
      # As a virtual machine is already being used, pipenv
      # is superfluous and eliminating pipenv in CI reduces overhead and reduce complexity, while retaining a single
      # location for development dependencies.
      run: |
        python -m pip install -r dev-requirements.txt
        python -m pip list
    - name: Static Analysis - general (flake8)
      run: |
        flake8 --count --show-source --statistics
    - name: Test with pytest
      run: |
        pytest
    - name: Upload coverage reports to Codecov with GitHub Action
      uses: codecov/codecov-action@v2
